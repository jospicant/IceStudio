// Code generated by Icestudio 0.3.3
// Mon, 03 Dec 2018 00:20:25 GMT

`default_nettype none

module main (
 input v08bfd6,
 input v02d455,
 output vdbb75f,
 output v317e8f,
 output v32443d,
 output [0:4] vinit
);
 wire w0;
 wire w1;
 wire w2;
 wire w3;
 wire w4;
 assign vdbb75f = w0;
 assign v317e8f = w1;
 assign v32443d = w2;
 assign w3 = v08bfd6;
 assign w4 = v02d455;
 vf67014 v434f99 (
  .vdbb75f(w0),
  .v317e8f(w1),
  .v32443d(w2),
  .v08bfd6(w3),
  .v02d455(w4)
 );
 assign vinit = 5'b00000;
endmodule

module vf67014 (
 input v08bfd6,
 input v02d455,
 output vdbb75f,
 output v317e8f,
 output v32443d
);
 wire w0;
 wire w1;
 wire w2;
 wire w3;
 wire w4;
 assign vdbb75f = w0;
 assign v317e8f = w1;
 assign v32443d = w2;
 assign w3 = v08bfd6;
 assign w4 = v02d455;
 vf67014_v3523b6 v3523b6 (
  .Toggle(w0),
  .Falling(w1),
  .Rising(w2),
  .in(w3),
  .clk(w4)
 );
endmodule

module vf67014_v3523b6 (
 input in,
 input clk,
 output Toggle,
 output Falling,
 output Rising
);
 
 reg Q1=0,Q2=0;
 
 //Biestable D donde capturo estado actual (in) y anterior (Q)
 always @(posedge clk)
 begin
   Q1<=in;
   Q2<=Q1;
 end
 
 //Con datos del estado actual ya anterior, realizando un circutio combinacional
 //puedo saber si la seÃ±al a cambiado y si ha subido o ha bajado el flanco.
 
 assign Toggle= (Q2 ^ in); //Si son distintos es que hay un cambio
 assign Falling = (~in & Q2); // Si in (Actual) es 0 pero antes (Q) era 1 -->Falling
 assign Rising  = (in & ~Q2); // Si in (Actual) es 1 pero antes (Q) era 0 --> Rising
endmodule
