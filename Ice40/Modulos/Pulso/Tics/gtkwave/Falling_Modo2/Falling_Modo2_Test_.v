// Code generated by Icestudio 0.3.3
// Sun, 02 Dec 2018 23:32:43 GMT

`default_nettype none

module main (
 input va1feb1,
 input v4e5c9f,
 input vc9fba8,
 output vd9fe63,
 output [0:4] vinit
);
 wire w0;
 wire w1;
 wire w2;
 wire w3;
 assign w0 = va1feb1;
 assign vd9fe63 = w1;
 assign w2 = v4e5c9f;
 assign w3 = vc9fba8;
 vcff094 v80b9b1 (
  .v02d455(w0),
  .v317e8f(w1),
  .v4ae82c(w2),
  .v08bfd6(w3)
 );
 assign vinit = 5'b00000;
endmodule

module vcff094 (
 input v02d455,
 input v4ae82c,
 input v08bfd6,
 output v317e8f
);
 wire w0;
 wire w1;
 wire w2;
 wire w3;
 assign v317e8f = w0;
 assign w1 = v4ae82c;
 assign w2 = v02d455;
 assign w3 = v08bfd6;
 vcff094_v3523b6 v3523b6 (
  .Falling(w0),
  .reset(w1),
  .clk(w2),
  .in(w3)
 );
endmodule

module vcff094_v3523b6 (
 input clk,
 input reset,
 input in,
 output Falling
);
 
 reg Q1=0,Q2=0;
 
 //Biestable D donde capturo estado actual (in) y anterior (Q)
 always @(posedge clk)
 if(reset)
    begin
       Q1<=1'b0;
       Q2<=1'b0;
    end 
 else
    begin       //Dos biestables encadenados
      Q1<=in;
      Q2<=Q1;
    end 
 
 //Con datos del estado actual ya anterior, realizando un circutio combinacional
 //puedo saber si la seÃ±al ha cambiado y si ha subido o ha bajado el flanco.
 
 assign Falling = (~in & Q2)& ~reset ; // Si in (Actual) es 0 pero antes (Q) era 1 -->Falling
 
endmodule
