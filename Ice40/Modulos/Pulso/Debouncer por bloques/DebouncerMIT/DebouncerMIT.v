// Code generated by Icestudio 0.3.3-beta
// Mon, 03 Sep 2018 21:28:59 GMT

`default_nettype none

module debouncer (
 input In_actual,
 input reset,
 input clk,
 output out
);
  
    reg [15:0] count;
    reg In_anterior, out;
 
    always @(posedge clk)
    
      if (reset) begin In_anterior <= In_actual; out <= In_actual; count <= 0; end      // anterior y actual pasan a tener el mismo valor, el contador
                                                                                        // se pone a 0 y la salida = a la entrada
      else if (In_actual != In_anterior) begin In_anterior <= In_actual; count <= 0; end // mientras entrada no estable se va filtrando el ruido y la
                                                                                         //cuenta no se inicia. Empezaremos a contar cuando la señal
                                                                                         //esté estable
      else if (count == 60000) out <= In_anterior;                              // se revisa si la cuenta ha llegado a su objetivo de filtrado
                                                                                       // si ha llegado --> el valor que hay en el registro
                                                                                       // In_anterior se pasa como dato estable a la salida
      else count <= count+1;                                                           // Si está estable seguirá contando hasta que consiga llegar
                                                                                       // con estabilidad a su fin
 
 
 
endmodule
