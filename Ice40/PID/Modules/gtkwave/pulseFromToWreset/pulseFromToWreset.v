// Code generated by Icestudio 0.3.3
// Sat, 01 Dec 2018 22:05:26 GMT

`default_nettype none

module main #(
 parameter v522332 = 4,
 parameter vcfa10a = 8
) (
 input v9a92d6,
 input vfe0d1c,
 output v244f0f,
 output [0:4] vinit
);
 localparam p0 = v522332;
 localparam p1 = vcfa10a;
 wire w2;
 wire w3;
 wire w4;
 assign v244f0f = w2;
 assign w3 = v9a92d6;
 assign w4 = vfe0d1c;
 v46b691 #(
  .v2b07d6(p0),
  .v4dd05a(p1)
 ) v4ead26 (
  .vd67ea4(w2),
  .vf8ab06(w3),
  .v3f7fd6(w4)
 );
 assign vinit = 5'b00000;
endmodule

module v46b691 #(
 parameter v2b07d6 = 0,
 parameter v4dd05a = 0
) (
 input vf8ab06,
 input v3f7fd6,
 output vd67ea4
);
 localparam p1 = v2b07d6;
 localparam p4 = v4dd05a;
 wire w0;
 wire w2;
 wire w3;
 wire w5;
 wire w6;
 wire w7;
 wire w8;
 assign vd67ea4 = w0;
 assign w3 = v3f7fd6;
 assign w5 = v3f7fd6;
 assign w7 = vf8ab06;
 assign w8 = vf8ab06;
 assign w5 = w3;
 assign w8 = w7;
 v161240 vb8f207 (
  .vcbab45(w0),
  .v0e28cb(w2),
  .v3ca442(w6)
 );
 v94027a #(
  .va1edee(p4)
 ) vd220e9 (
  .ve9fb46(w5),
  .v19bd79(w6),
  .vdb65bd(w8)
 );
 v7a1119 #(
  .va1edee(p1)
 ) v94fb85 (
  .v19bd79(w2),
  .ve9fb46(w3),
  .v637c56(w7)
 );
endmodule

module v161240 (
 input v0e28cb,
 input v3ca442,
 output vcbab45
);
 wire w0;
 wire w1;
 wire w2;
 assign w0 = v0e28cb;
 assign w1 = v3ca442;
 assign vcbab45 = w2;
 v161240_vf4938a vf4938a (
  .a(w0),
  .b(w1),
  .c(w2)
 );
endmodule

module v161240_vf4938a (
 input a,
 input b,
 output c
);
 //-- Puerta AND
 
 assign c = a & b;
 
 
endmodule

module v94027a #(
 parameter va1edee = 0
) (
 input vdb65bd,
 input ve9fb46,
 output v19bd79
);
 localparam p1 = va1edee;
 wire w0;
 wire w2;
 wire w3;
 assign v19bd79 = w0;
 assign w2 = ve9fb46;
 assign w3 = vdb65bd;
 v94027a_v8c8712 #(
  .t(p1)
 ) v8c8712 (
  .u(w0),
  .clk(w2),
  .reset(w3)
 );
endmodule

module v94027a_v8c8712 #(
 parameter t = 0
) (
 input reset,
 input clk,
 output u
);
 // falling pulse in t
 // t ciclos de reloj a 1 y
 // cambia a 0.
 
 localparam num_periods=t;
 
 reg[7:0] contador=0;
 reg u=1'b1;
 
 
 always @(posedge clk)
 if(reset) contador<=0;
 else if(contador >= num_periods-1)
  begin
  u <=1'b0;
  contador <= contador;
  end
 else
  begin
   u<=1'b1;
   contador=contador+1;
  end
  
  
  
  
endmodule

module v7a1119 #(
 parameter va1edee = 0
) (
 input v637c56,
 input ve9fb46,
 output v19bd79
);
 localparam p1 = va1edee;
 wire w0;
 wire w2;
 wire w3;
 assign v19bd79 = w0;
 assign w2 = ve9fb46;
 assign w3 = v637c56;
 v7a1119_v8c8712 #(
  .t(p1)
 ) v8c8712 (
  .u(w0),
  .clk(w2),
  .reset(w3)
 );
endmodule

module v7a1119_v8c8712 #(
 parameter t = 0
) (
 input reset,
 input clk,
 output u
);
 // EscalÃ³n u(t)
 // t ciclos de reloj a 0 y
 // cambia a 1.
 
 localparam num_periods=t;
 
 reg[7:0] contador=0;
 reg u=1'b0;
 
 
 always @(posedge clk)
 if(reset) contador<=0;
 else if(contador >= num_periods-1)
  begin
  u <=1'b1;
  contador <= contador;
  end
 else
  begin
   u<=1'b0;
   contador=contador+1;
  end
  
  
  
  
endmodule
