// Code generated by Icestudio 0.3.0-rc
// Mon, 22 May 2017 18:37:32 GMT

// Testbench template

`default_nettype none
`define DUMPSTR(x) `"x.vcd`"
`timescale 10 ns / 10 ns                          // Cambio Resolución a  10ns


module main_tb;
 
 // Simulation time: 100ns (10 * 10ns)
 parameter DURATION = 12;
 
 // TODO: edit the module parameters here
 // e.g. localparam constant_value = 1;
 localparam constant_Num = 5;
 
 // Input/Output                                 // Defino las entradas-salidas de mi módulo Testbench
 output reg clock=1;
 input wire[15:0] Factorial;
 input wire fin;
 
/* 
 // Module instance                              // Este es el Main que me ha creado, yo le he añadido .vclk(clock) a MAIN
 main #(
  .v9f94e8(constant_Num)
 ) MAIN ( .vclk(clock));
 */
 
 //***********************************************************************************************************************************
 //****************************  Instacio  Módulo a Probar.  Me fijo en el nombre que ha creado la exportación para poder
 // instanciarlo con el nombre adecuado **********************************************************************************************
 
 ve5ea0e_v86ef4e #(.number(5)) DUT_Factorial (.clk(clock), .factorial(Factorial), .End(fin));   //Instancia
 
 //***********************************************************************************************************************************
 //***********************************************************************************************************************************
 
 
 always #1 clock = ~ clock;                     //genero reloj de entrada a mi módulo DUT  ( es salida de mi módulo Testbench)
 
 
 initial begin
  // File were to store the simulation results
  $dumpfile(`DUMPSTR(`VCD_OUTPUT));
  $dumpvars(0, main_tb);
 
  // TODO: initialize the registers here           // Inicializo variables
  // e.g. value = 1;
  // e.g. #2 value = 0;
  
 
  #(DURATION) $display("End of simulation");
  $display("Factorial = ", Factorial);
  $finish;
 end
 
endmodule
